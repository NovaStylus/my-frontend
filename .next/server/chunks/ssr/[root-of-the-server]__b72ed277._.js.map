{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/mass/app/login/page.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\nimport { useRouter } from 'next/router'; // Import useRouter for navigation\r\n\r\nexport default function LoginPage() {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState({ email: \"\", password: \"\" });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\r\n  const router = useRouter(); // Initialize useRouter for page navigation\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => setIsScrolled(window.scrollY > 20);\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateEmail = (email: string) => {\r\n    const regex = /\\S+@\\S+\\.\\S+/;\r\n    return regex.test(email) ? \"\" : \"Enter a valid email.\";\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const emailError = validateEmail(form.email);\r\n    if (emailError) {\r\n      setError({ ...error, email: emailError });\r\n      return; // Don't proceed further if there is an error\r\n    }\r\n\r\n    setError({ email: \"\", password: \"\" });\r\n\r\n    // Send login data to the backend\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Login successful:', result);\r\n\r\n        // Store user data in localStorage (or JWT token, depending on your implementation)\r\n        localStorage.setItem('user', JSON.stringify(result.user));\r\n\r\n        // Redirect to the PatientDashboard page\r\n        router.push('/patientdashboard'); // This will take the user to the Patient Dashboard\r\n      } else {\r\n        setError({ ...error, password: result.error || 'Login failed' });\r\n      }\r\n    } catch (error) {\r\n      setError({ ...error, password: 'Error connecting to server' });\r\n      console.error('❌ Error during login:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"relative flex flex-col flex-1 min-h-screen\">\r\n      {/* Navbar */}\r\n      <nav\r\n        className={`fixed top-0 left-0 w-full z-50 flex items-center justify-between px-6 py-3 transition-all duration-300 shadow-md ${\r\n          isScrolled ? \"bg-blue-700 py-3\" : \"bg-blue-600 py-3\"\r\n        }`}\r\n      >\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"w-10 h-10 flex items-center justify-center rounded-full bg-white\">\r\n            <span className=\"text-blue-600 text-7xl font-bold leading-none\">+</span>\r\n          </div>\r\n\r\n          <h1 className=\"text-2xl font-bold text-white\">MASS</h1>\r\n        </div>\r\n        <div className=\"space-x-6\">\r\n          <Link href=\"/\" className=\"text-white font-medium\">\r\n            Home\r\n          </Link>\r\n          <Link href=\"/signup\" className=\"text-white font-medium\">\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Login Form */}\r\n      <section className={`flex flex-col items-center justify-center flex-1 mt-20 p-4 transition-all ${showForgotPassword ? 'blur-sm' : ''}`}>\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md space-y-5\"\r\n        >\r\n          <h2 className=\"text-3xl font-bold text-gray-900 text-center mb-6\">\r\n            Login\r\n          </h2>\r\n\r\n          <FormInput\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            error={error.email}\r\n          />\r\n          <FormInput\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={form.password}\r\n            onChange={handleChange}\r\n            error={error.password}\r\n            showToggle\r\n            toggleVisibility={() => setShowPassword(!showPassword)}\r\n            visible={showPassword}\r\n          />\r\n\r\n          <div className=\"flex justify-end -mt-2\">\r\n            <p\r\n              className=\"text-sm text-blue-600 hover:underline cursor-pointer\"\r\n              onClick={() => setShowForgotPassword(true)}\r\n            >\r\n              Forgot Password?\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white font-semibold py-3 rounded-lg hover:bg-blue-600 transition\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </section>\r\n\r\n      {/* Forgot Password Modal */}\r\n      {showForgotPassword && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40 backdrop-blur-sm\">\r\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-sm relative\">\r\n            <button\r\n              onClick={() => setShowForgotPassword(false)}\r\n              className=\"absolute top-2 right-3 text-gray-500 hover:text-gray-700 text-xl\"\r\n            >\r\n              ×\r\n            </button>\r\n            <h3 className=\"text-xl font-semibold mb-4\">Reset Password</h3>\r\n            <form>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Enter your email\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full mt-4 bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition\"\r\n              >\r\n                Send Reset Link\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction FormInput({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  type = \"text\",\r\n  error = \"\",\r\n  showToggle = false,\r\n  toggleVisibility = () => {},\r\n  visible = false,\r\n}: {\r\n  label: string;\r\n  name: string;\r\n  value: string;\r\n  onChange: any;\r\n  type?: string;\r\n  error?: string;\r\n  showToggle?: boolean;\r\n  toggleVisibility?: () => void;\r\n  visible?: boolean;\r\n}) {\r\n  return (\r\n    <div className=\"relative\">\r\n      <label className=\"block text-gray-700 font-medium mb-2\">{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"w-full border border-gray-300 rounded-lg p-3 pr-12 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n        required\r\n      />\r\n      {showToggle && (\r\n        <span\r\n          className=\"absolute right-3 top-[43px] cursor-pointer text-gray-500\"\r\n          onClick={toggleVisibility}\r\n        >\r\n          {visible ? <EyeOff size={20} /> : <Eye size={20} />}\r\n        </span>\r\n      )}\r\n      {error && <p className=\"text-red-500 text-sm mt-1\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}